<section>
    <title>OCaml in Debian</title>
    <para>
        At the time of this writing, the latest version of OCaml in Debian is &ocaml-version;.
    </para>

    <para>
        The <filename>ocaml</filename> package depends on all the basic packages needed to develop programs with OCaml. More specifically, the packaging of OCaml is split into smaller packages. The <filename>-nox</filename> packages contain libraries which don't need X (i.e. for the programs which don't use the <code>Graphics</code> or <code>LablTk</code> modules) in order to avoid too big dependencies for users who don't have and X server installed.
        <itemizedlist>
            <listitem>
                <para>
                    The <filename>ocaml</filename> and <filename>ocaml-nox</filename> package contain the compiler and its libraries.
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-native-compilers</filename> contains the OCaml compiler built in native mode.
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-base</filename> and <filename>ocaml-base-nox</filename> packages contain the runtime libraries needed by bytecode programs compiled with OCaml (in particular it contains the <filename>ocamlrun</filename> program).
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-interp</filename> contains the interactive command-line interpreter.
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-mode</filename> contains the OCaml emacs mode (the one provided with OCaml, not the tuareg mode).
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-source</filename> contains the sources of the OCaml compiler.
                </para>
            </listitem>
            <listitem>
                <para>
                    The <filename>ocaml-compiler-libs</filename> contains some internal libraries of the OCaml compiler (it is needed only in very rare cases).
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <para>
        Since the libraries produced by OCaml are binary incompatible when compiled with two different releases of OCaml, versionned virtual packages are provided: <filename>ocaml-&ocaml-version;</filename>, <filename>ocaml-nox-&ocaml-version;</filename>, <filename>ocaml-base-&ocaml-version;</filename>, <filename>ocaml-base-nox-&ocaml-version;</filename>.
    </para>
</section>

<section>
    <title>Native and bytecode programs</title>

    <para>
        The OCaml compiler can produce two kinds of executables: bytecode and native. The native executables (compiled with <filename>ocamlopt</filename>) are generally faster since they are compiled specifically for an achitecture. The bytecode executables (compiled with <filename>ocamlc</filename>) have the advantage of being portable, which means that a bytecode program can be run on any achitecture without needing to be rebuilt. It should be noted that native OCaml compilers are not provided for every achitecture. Only the following are suported: alpha, amd64, arm, i386, ia64, kfreebsd-i386, powerpc and sparc.
    </para>

    <para>
        Package providing both native and bytecode versions of a program <filename>prog</filename> usually name them respectively <filename>prog.opt</filename> and <filename>prog.byte</filename> and provide a symbolic link <filename>prog</filename> to the best available version (generally <filename>prog.opt</filename>).
    </para>

    <para>
        The <filename>ocaml-native-compilers</filename> package contains the OCaml compiler built in native mode (<filename>ocamlc.opt</filename> and <filename>ocamlopt.opt</filename>). Compiling with this version of the compiler is generally faster but, as explained before, the <filename>ocaml-native-compilers</filename> package is not available on every architecture. In order to build big programs and benefit from this natively built compiler, packages should depend on <filename>ocaml-best-compilers</filename> which depends on <filename>ocaml-native-compilers</filename> where available and on <filename>ocaml</filename> elsewhere.
    </para>
</section>

<section id="files">
    <title>Files used by the OCaml compiler</title>

    <para>
        The &ocaml-name; compiler can produce or use the following kind of files:
        <itemizedlist>
            <listitem><para>bytecode executables (they can be recognised since they start with <code>#!/usr/bin/ocamlrun</code>)</para></listitem>
            <listitem><para>bytecode libraries (<filename>*.cma</filename>)</para></listitem>
            <listitem><para>native executables (in ELF format)</para></listitem>
            <listitem><para>native libraries (<filename>*.cmxa</filename>)</para></listitem>
            <listitem><para>shared libraries (for C bindings) (<filename>dll*.so</filename>)</para></listitem>
            <listitem><para>static libraries (for C bindings) (<filename>lib*.a</filename>)</para></listitem>
            <listitem><para>bytecode object files (<filename>*.cmo</filename>)</para></listitem>
            <listitem><para>native object files (<filename>*.cmx</filename>)</para></listitem>
            <listitem><para>configuration files for handling libraries with <filename>ocamlfind</filename> (<filename>META</filename>)</para></listitem>
            <listitem><para>&camlp4; related files (<filename>*.cm[ao]</filename>)</para></listitem>
        </itemizedlist>
    </para>
</section>

<section id="liblocal-path">
    <title>Locally installing OCaml programs and libraries</title>

    <para>
        Installation and use of locally installed OCaml related programs is out of the scope of this document. However, in order to have it work with a standard Debian installation, you should follow some guidelines.
        <itemizedlist>
            <listitem>
                <para>
                    Executable files should be installed in <filename>/usr/local/bin</filename>.
                </para>
            </listitem>
            <listitem>
                <para>
                    Shared libraries (for C bindings) should be installed in <filename>/usr/local/lib/ocaml/&ocaml-version;/stublibs/</filename>
                </para>
            </listitem>
            <listitem>
                <para>
                    Basically, every other file should be installed in <filename>/usr/local/lib/ocaml/&ocaml-version;/</filename>. This includes in particular bytecode libraries (<filename>*.cma</filename>), native libraries (<filename>*.cmxa</filename>), bytecode object files (<filename>*.cmo</filename>), native object files (<filename>*.cmx</filename>), static libraries (<filename>*.a</filename>) and <filename>META</filename> files.
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <para>
        The OCaml compiler first looks for a local installation of libraries and then for libraries installed by Debian packages. This section describe the standard paths for files contained in Debian packages.
    </para>

    <para>
        Warning: the <varname>+</varname> preceding any library in the <option>-I</option> of ocamlc or ocamlopt won't be expanded to the local standard library path. You need to specify the path entirely.
    </para>
</section>
