#!/usr/bin/make -f
include /usr/share/quilt/quilt.make

PACKAGE := ocaml
ALL_PACKAGES := $(shell sed -ne 's/^Package: //p' debian/control)
OCAMLMAJOR := 3.11
OCAMLMINOR := 1+rc0

# Build cache (for Debian debugging)
BUILDCACHE := $(wildcard ../ocaml.cache)

# These are defined here to avoid definition of them in ocamlvars.mk
OCAML_ABI := $(OCAMLMAJOR).$(OCAMLMINOR)
OCAML_STDLIB_DIR := /usr/lib/ocaml/$(OCAML_ABI)
OCAML_NATIVE_ARCHS := $(shell cat debian/native-archs)
DEB_BUILD_ARCH ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
OCAML_OPT_ARCH := $(findstring $(DEB_BUILD_ARCH),$(OCAML_NATIVE_ARCHS))
OCAML_HAVE_OCAMLOPT := $(if $(OCAML_OPT_ARCH),yes,no)
OCAML_OCAMLDOC_DESTDIR_HTML =
include /usr/share/ocaml/ocamlinit.mk

MD5SUMSDIR = /var/lib/ocaml/md5sums
INSTDIR = $(CURDIR)/debian/tmp/usr
DISTDIR = $(PACKAGE)-$(OCAML_ABI)
SRCTARBALL = $(PACKAGE)-source-$(OCAML_ABI).tar.bz2

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

export DH_OPTIONS
ifeq ($(OCAML_OPT_ARCH),)
  DH_OPTIONS += -Nocaml-native-compilers
endif

# This has to be exported to make gen_modules work
export OCAML_OPT_ARCH
export OCAML_STDLIB_DIR

CONFIGURE_OPTS := \
  --with-pthread -prefix /usr \
  -libdir $(OCAML_STDLIB_DIR) \
  -mandir /usr/share/man \
  -tkdefs "-I/usr/include/tcl8.4" \
  -tklibs "-L/usr/lib -ltk8.4 -ltcl8.4"

CONFIGURE_SED := \
  -e "s%MANDIR=.*$$%MANDIR=\$$(PREFIX)/share/man%g" \
  -e "s%LIBDIR=.*$$%LIBDIR=\$$(PREFIX)/lib/ocaml/$(OCAML_ABI)%g" \
  -e "s%STUBLIBDIR=.*$$%STUBLIBDIR=\$$(PREFIX)/lib/ocaml/$(OCAML_ABI)/stublibs%g"


$(QUILT_STAMPFN): debian/$(SRCTARBALL)
ocamlinit-stamp: debian/$(SRCTARBALL)

# Generate ocaml-native-compilers' Architecture field.
# Should never be called automatically.
debian/control:
	sed -e 's/@OCamlNativeArchs@/$(OCAML_NATIVE_ARCHS)/g' debian/control.in > $@

pre-config-stamp: debian/$(SRCTARBALL)
	chmod +x debian/gen_modules.pl
# Backup upstream config.{sub,guess}, and use most up-to-date ones
	for ext in sub guess; do \
	  if [ -f /usr/share/misc/config.$$ext ] && \
	    ! [ -f debian/config.orig.$$ext ]; then \
	    mv config/gnu/config.$$ext debian/config.orig.$$ext; \
	    cp -f /usr/share/misc/config.$$ext config/gnu/config.$$ext; \
	  fi; \
	done
	touch $@

debian/$(SRCTARBALL):
	ln -fs . $(DISTDIR)	# beware of the symlink recursion!
	tar --anchored -chjf $@ \
	  --exclude=$(DISTDIR)/$(DISTDIR)	\
	  --exclude-from=debian/ocaml-source.exclude \
	  $(DISTDIR)/
	rm -f $(DISTDIR)

config-stamp: pre-config-stamp $(QUILT_STAMPFN) ocamlinit-stamp
	dh build --before dh_auto_configure
	./configure $(CONFIGURE_OPTS)
	sed -i $(CONFIGURE_SED) config/Makefile
	if test -z "`grep "OTHERLIBRARIES.*labltk" config/Makefile`"; then \
	  echo "Error, labltk library was not detected"; \
	  echo "Check your tcl/tk development packages"; \
	  echo "Aborting."; \
	  exit 1; \
	fi
	touch $@

$(QUILT_STAMPFN): ocamlinit-stamp

build: build-stamp
build-stamp: config-stamp
	if test ! -d boot.debian; then \
	  cp -xa boot boot.debian; \
	fi
	rm -Rf debian/examples && mkdir debian/examples
	cp -a otherlibs/labltk/examples_labltk debian/examples/labltk
	find debian/examples/labltk -name .cvsignore -delete
ifeq ($(BUILDCACHE),)
	$(MAKE) world
	$(MAKE) bootstrap
	$(MAKE) -C tools objinfo dumpobj
ifeq (,$(OCAML_OPT_ARCH))
# As of 3.11.0, manpages are made only in `make opt.opt'
	make -C ocamldoc manpages \
	  OCAMLDOC_RUN="../boot/ocamlrun -I ../otherlibs/unix -I ../otherlibs/str ./ocamldoc"
else
	@echo "Building native compilers"
	$(MAKE) opt opt.opt
	$(MAKE) -C tools dumpapprox
	touch opt-built-stamp
endif
else
	@echo "===> WARNING: $(BUILDCACHE) detected, compilation skipped! <==="
	rsync -a --exclude=debian --exclude=.git $(BUILDCACHE)/ .
	rm -f build-stamp install-stamp
endif
	dh build --after dh_auto_test
	touch $@

clean: unpatch ocamlinit-clean
	dh clean --before dh_auto_clean
ifneq ($(wildcard $(CURDIR)/config/Makefile),)
	$(MAKE) clean
	$(MAKE) -C emacs clean
endif
# Restore files altered by the build process
	if test -d boot.debian; then \
	  rm -Rf boot; \
	  mv boot.debian boot; \
	fi
	for ext in sub guess; do \
	  if [ -f debian/config.orig.$$ext ] ; then \
	    mv -f debian/config.orig.$$ext config/gnu/config.$$ext; \
	  fi; \
	done
	if head -n 1 emacs/ocamltags.in | grep -q '^#!/bin/sh'; then \
		sed -i 1d emacs/ocamltags.in; \
	fi
# Remaining stuff
	-rm -Rf debian/$(SRCTARBALL) debian/examples
	dh clean --after dh_auto_clean

install: install-stamp
install-stamp:
	dh install --before dh_auto_install
# Install Emacs files
	$(MAKE) -C emacs \
	  EMACSDIR=$(CURDIR)/debian/ocaml-mode/usr/share/emacs/site-lisp/ocaml-mode \
	  NOCOMPILE=true simple-install
	if ! head -n 1 emacs/ocamltags.in | grep -q '^#!/bin/sh'; then \
	  sed -i -e '1 i #!/bin/sh' emacs/ocamltags.in; \
	fi
	$(MAKE) -C emacs SCRIPTDIR=$(CURDIR)/debian/ocaml-mode/usr/bin install-ocamltags
# Install OCaml
	sed -e 's|PREFIX=\"/.*\"|PREFIX=\"$(INSTDIR)"|' < config/config.sh > config/config.debian.install.sh
	$(MAKE) install PREFIX=$(INSTDIR)
# To avoid erroneous dh_install warnings
	rm -f $(INSTDIR)/share/man/man1/ocamlopt.opt.1 $(INSTDIR)/share/man/man1/ocamlc.opt.1
# Dispatch files with dh_install
	cd debian && \
	for u in ocaml ocaml-nox; do \
	  DESTDIR=tmp ./gen_modules.pl $$u.install > $$u.install.new; \
	  mv $$u.install.new $$u.install; \
	done
	if ! dh_install --list-missing; then \
	  echo "===> dh_install has failed <==="; \
	  find debian/tmp; \
	  exit 1; \
	fi
# Install additional files not handled by dh_install
# Beware: dh_install does not handle renamings, please pay attention
	cp otherlibs/labltk/README debian/ocaml/usr/share/doc/ocaml/README.labltk
	for u in dumpobj objinfo dumpapprox; do \
	  if [ -f tools/$$u ]; then \
	    cp tools/$$u debian/ocaml-nox/usr/bin/ocaml$$u; \
	  fi \
	done
	for mli in `find camlp4 -name '*.mli'` ; do \
	  cp --parents $$mli debian/camlp4$(OCAML_STDLIB_DIR); \
	done
	for pkg in ocaml ocaml-nox ocaml-base; do ( \
	  cd debian/$$pkg/usr/share/doc/$$pkg && \
	  ln -sf ../ocaml-base-nox/Changes.gz . && \
	  ln -sf ../ocaml-base-nox/README.gz . && \
	  ln -sf ../ocaml-base-nox/README.Debian .; \
	); done
# Remove empty directory
	rmdir $(CURDIR)/debian/ocaml-nox$(OCAML_STDLIB_DIR)/ocamldoc/custom
# Remaining stuff
	dh install --after dh_install --before dh_compress
	dh_compress -Xexamples/labltk
	dh install --after dh_compress
	touch $@

binary-stamp: install-stamp
	dh binary --before dh_gencontrol
	for u in $(ALL_PACKAGES); do \
	  echo 'F:OCamlABI=$(OCAML_ABI)' >> debian/$$u.substvars; \
	done
ifeq (,$(OCAML_OPT_ARCH))
	echo 'F:BestProvides=ocaml-best-compilers' >> debian/ocaml-nox.substvars
else
	echo 'F:BestProvides=' >> debian/ocaml-nox.substvars
endif
	dh_gencontrol
	dh binary --after dh_gencontrol
	touch $@

binary: binary-arch binary-indep
binary-arch: binary-stamp
binary-indep: binary-stamp

.PHONY: build clean binary-indep binary-arch binary install build ocamlinit

.PHONY: redo-patches
redo-patches:
	rm -f debian/patches/*
	git format-patch -N -o debian/patches upstream...patch-queue | \
	  sed -e 's%debian/patches/%%' > debian/patches/series
	sed -i -e 1d debian/patches/*.patch
