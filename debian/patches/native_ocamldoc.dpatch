#! /bin/sh /usr/share/dpatch/dpatch-run
## native_ocamldoc.dpatch by Samuel Mimram <smimram@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad ocaml~/ocamldoc/Makefile ocaml/ocamldoc/Makefile
--- ocaml~/ocamldoc/Makefile	2009-02-19 13:17:13.000000000 +0100
+++ ocaml/ocamldoc/Makefile	2009-03-02 17:59:05.000000000 +0100
@@ -201,8 +201,8 @@
 
 $(OCAMLDOC): $(EXECMOFILES) odoc.cmo
 	$(OCAMLC) -o $@ -linkall unix.cma str.cma dynlink.cma $(LINKFLAGS) $(OCAMLCMOFILES) $(EXECMOFILES) odoc.cmo
-$(OCAMLDOC_OPT): $(EXECMXFILES) odoc_opt.cmx
-	$(OCAMLOPT) -o $@ unix.cmxa str.cmxa $(LINKFLAGS) $(OCAMLCMXFILES) $(EXECMXFILES) odoc_opt.cmx
+$(OCAMLDOC_OPT): $(EXECMXFILES) odoc.cmx
+	$(OCAMLOPT) -o $@ unix.cmxa str.cmxa $(LINKFLAGS) $(OCAMLCMXFILES) $(EXECMXFILES) odoc.cmx
 
 $(OCAMLDOC_LIBCMA): $(LIBCMOFILES)
 	$(OCAMLC) -a -o $@ $(LINKFLAGS) $(OCAMLCMOFILES) $(LIBCMOFILES)
diff -urNad ocaml~/ocamldoc/odoc.ml ocaml/ocamldoc/odoc.ml
--- ocaml~/ocamldoc/odoc.ml	2009-01-08 16:35:59.000000000 +0100
+++ ocaml/ocamldoc/odoc.ml	2009-03-02 18:00:29.000000000 +0100
@@ -11,7 +11,7 @@
 
 (* $Id: odoc.ml,v 1.9 2006/09/20 11:14:36 doligez Exp $ *)
 
-(** Main module for bytecode. *)
+(** Main module. *)
 
 open Config
 open Clflags
@@ -72,7 +72,7 @@
       Dynlink.allow_unsafe_modules true;
       try
         let real_file = get_real_filename file in
-        ignore(Dynlink.loadfile real_file)
+        ignore(Dynlink.loadfile (Dynlink.adapt_filename real_file))
       with
         Dynlink.Error e ->
           prerr_endline (Odoc_messages.load_file_error file (Dynlink.error_message e)) ;
diff -urNad ocaml~/ocamldoc/odoc_args.ml ocaml/ocamldoc/odoc_args.ml
--- ocaml~/ocamldoc/odoc_args.ml	2009-02-19 13:17:13.000000000 +0100
+++ ocaml/ocamldoc/odoc_args.ml	2009-03-02 17:26:11.000000000 +0100
@@ -24,8 +24,6 @@
 
 let include_dirs = Clflags.include_dirs
 
-let bytecode_mode = ref true
-
 class type doc_generator =
     object
       method generate : Odoc_module.t_module list -> unit
@@ -254,11 +252,8 @@
   "-dot", Arg.Unit (fun () -> set_doc_generator !default_dot_generator), M.generate_dot ;
   "-customdir", Arg.Unit (fun () -> Printf.printf "%s\n" Odoc_config.custom_generators_path; exit 0),
   M.display_custom_generators_dir ;
-  "-i", Arg.String (fun s -> if !bytecode_mode then () else (prerr_endline (M.option_not_in_native_code "-i"); exit 1)),
-  M.add_load_dir ;
-  "-g", Arg.String (fun s -> if !bytecode_mode then () else (prerr_endline (M.option_not_in_native_code "-g"); exit 1)),
-  M.load_file ^
-  "\n\n *** HTML options ***\n";
+  "-i", Arg.String (fun s -> ()), M.add_load_dir ; "-g", Arg.String (fun s -> ()),
+  M.load_file ^ "\n\n *** HTML options ***\n";
 
 (* html only options *)
   "-all-params", Arg.Set with_parameter_list, M.with_parameter_list ;
diff -urNad ocaml~/ocamldoc/odoc_args.mli ocaml/ocamldoc/odoc_args.mli
--- ocaml~/ocamldoc/odoc_args.mli	2009-02-19 13:17:13.000000000 +0100
+++ ocaml/ocamldoc/odoc_args.mli	2009-03-02 17:26:42.000000000 +0100
@@ -22,10 +22,6 @@
 (** The include_dirs in the OCaml compiler. *)
 val include_dirs : string list ref
 
-(** Indicate if we are in bytecode mode or not.
-   (For the [ocamldoc] command).*)
-val bytecode_mode : bool ref
-
 (** The class type of documentation generators. *)
 class type doc_generator =
   object method generate : Odoc_module.t_module list -> unit end
diff -urNad ocaml~/ocamldoc/odoc_messages.ml ocaml/ocamldoc/odoc_messages.ml
--- ocaml~/ocamldoc/odoc_messages.ml	2009-02-19 13:17:13.000000000 +0100
+++ ocaml/ocamldoc/odoc_messages.ml	2009-03-02 17:37:28.000000000 +0100
@@ -24,7 +24,6 @@
 let usage = "Usage : "^(Sys.argv.(0))^" [options] <files>\n"
 let options_are = "Options are :"
 let option_version = "\tPrint version and exit"
-let bytecode_only = "(bytecode version only)"
 let latex_only = "(LaTeX only)"
 let texi_only = "(TeXinfo only)"
 let latex_texi_only = "(LaTeX and TeXinfo only)"
@@ -41,8 +40,8 @@
 let option_text ="<file>\tConsider <file> as a .txt file"
 let display_custom_generators_dir = "\tDisplay custom generators standard directory and exit"
 let add_load_dir = "<dir>\tAdd the given directory to the search path for custom\n"^
-  "\t\tgenerators "^bytecode_only
-let load_file = "<file.cm[o|a]>\n\t\tLoad file defining a new documentation generator\n\t\t"^bytecode_only
+  "\t\tgenerators"
+let load_file = "<file.cm[o|a]>\n\t\tLoad file defining a new documentation generator\n\t\t"
 let nolabels = "\tIgnore non-optional labels in types"
 let werr = "\tTreat ocamldoc warnings as errors"
 let hide_warnings = "\n\t\tdo not print ocamldoc warnings"
